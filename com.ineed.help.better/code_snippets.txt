
http://developer.android.com/reference/android/app/Activity.html#finish%28%29

public void finishActivityFromChild (Activity child, int requestCode)
Since: API Level 1

This is called when a child activity of this one calls its finishActivity().
Parameters
child 	The activity making the call.
requestCode 	Request code that had been used to start the activity.
public void finishAffinity ()
Since: API Level 16

Finish this activity as well as all activities immediately below it in the current task that have the same affinity. This is typically used when an application can be launched on to another task (such as from an ACTION_VIEW of a content type it understands) and the user has used the up navigation to switch out of the current task and in to its own task. In this case, if the user has navigated down into any other activities of the second application, all of those should be removed from the original task as part of the task switch.

Note that this finish does not allow you to deliver results to the previous activity, and an exception will be thrown if you are trying to do so.

public void finishFromChild (Activity child)
Since: API Level 1

This is called when a child activity of this one calls its finish() method. The default implementation simply calls finish() on this activity (the parent), finishing the entire group.
Parameters
child 	The activity making the call.
See Also

    finish()





http://stackoverflow.com/questions/6894195/getting-android-location-and-return-unknown-or-null-when-providers-are-unavail



http://www.hascode.com/2010/05/sensor-fun-location-based-services-and-gps-for-android/

private void showLocation() {
		LocationProvider gps = locationManager.getProvider(PROVIDER);
		if (gps == null) {
			Log.w(TAG, "gps provider not found");
			return;
		}
 
		locationManager.requestLocationUpdates(PROVIDER, 1200, 5, this);
		Log.d(TAG, "listening to gps events started");
	}

http://stackoverflow.com/questions/7333073/locationmanager-will-not-return-destination
public class Activity1 extends Activity implements LocationListener {
/** Called when the activity is first created. */
JoshTwoActivity main;
Activity2 two;
boolean checkTick = false;
String locationplace = "";
private LocationManager locationManager;
private String provider;

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);


               locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);

    Criteria criteria = new Criteria();
    provider = locationManager.getBestProvider(criteria, false);
    System.out.println(provider);
    System.out.println(locationManager.getProviders(criteria, false));
    System.out.println(locationManager.getProvider("network"));
    System.out.println(locationManager.getAllProviders());

    Location location = locationManager.getLastKnownLocation(provider);
    System.out.println(locationManager.isProviderEnabled(provider));

    // Initialize the location fields
    if (location != null) {
        System.out.println("Provider " + provider + " has been selected.");
        int lat = (int) (location.getLatitude());
        int lng = (int) (location.getLongitude());
        System.out.println(String.valueOf(lat));
        System.out.println(String.valueOf(lng));

    } else {
        System.out.println("Provider not available");
        System.out.println("Provider not available");
    }

}


/* Request updates at startup */
@Override
protected void onResume() {
    super.onResume();
    locationManager.requestLocationUpdates(provider, 400, 1, this);
}

/* Remove the locationlistener updates when Activity is paused */
@Override
protected void onPause() {
    super.onPause();
    locationManager.removeUpdates(this);
}

@Override
public void onLocationChanged(Location location) {
    int lat = (int) (location.getLatitude());
    int lng = (int) (location.getLongitude());
    System.out.println(String.valueOf(lat));
    System.out.println(String.valueOf(lng));
}

@Override
public void onStatusChanged(String provider, int status, Bundle extras) {
    // TODO Auto-generated method stub

}

@Override
public void onProviderEnabled(String provider) {
    Toast.makeText(this, "Enabled new provider " + provider,
            Toast.LENGTH_SHORT).show();

}

@Override
public void onProviderDisabled(String provider) {
    Toast.makeText(this, "Disenabled provider " + provider,
            Toast.LENGTH_SHORT).show();
}


Comment 19 by a.wirayu...@gmail.com, Jul 4, 2009
http://code.google.com/p/android/issues/detail?id=2545


public class DeviceLocationListener implements LocationListener {
		public void onLocationChanged(Location location) {
			mLocationManager.removeUpdates(locationListener);
			mLocationManager.requestLocationUpdates(
                        LocationManager.GPS_PROVIDER,
                        3000,
                        1,
                        locationListener);
		}
}



http://stackoverflow.com/questions/10077905/override-power-button-just-like-home-button

// start using mock locations
try {
    mockLocationCreator = new MockLocationCreator(this.getApplicationContext());
    try {
        mockLocationCreator.openLocationList();
 
        mockLocationThread = new Thread(mockLocationCreator);
        mockLocationThread.start();
 
        Toast.makeText(this.getApplicationContext(), "Mock locations are in use", Toast.LENGTH_LONG).show();
 
    } catch (IOException e) {
        Toast.makeText(this.getApplicationContext(), "Error: Unable to open / read data file", Toast.LENGTH_LONG).show();
        mockLocationCreator = null;
    }
} catch(SecurityException e) {
    Toast.makeText(this.getApplicationContext(), "Error: Insufficient Privileges", Toast.LENGTH_LONG).show();
    Log.e(TAG, "unable to use mock locations, insufficient privileges", e);
}


SEND SMS

private void sendSMS(String phoneNumber, String message)
{        
    String SENT = "SMS_SENT";
    String DELIVERED = "SMS_DELIVERED";
 
    PendingIntent sentPI = PendingIntent.getBroadcast(this, 0,
        new Intent(SENT), 0);
 
    PendingIntent deliveredPI = PendingIntent.getBroadcast(this, 0,
        new Intent(DELIVERED), 0);
 
    //---когда SMS отправлено---
    registerReceiver(new BroadcastReceiver(){
        @Override
        public void onReceive(Context arg0, Intent arg1) {
            switch (getResultCode())
            {
                case Activity.RESULT_OK:
                    Toast.makeText(getBaseContext(), "SMS sent", 
                            Toast.LENGTH_SHORT).show();
                    break;
                case SmsManager.RESULT_ERROR_GENERIC_FAILURE:
                    Toast.makeText(getBaseContext(), "Generic failure", 
                            Toast.LENGTH_SHORT).show();
                    break;
                case SmsManager.RESULT_ERROR_NO_SERVICE:
                    Toast.makeText(getBaseContext(), "No service", 
                            Toast.LENGTH_SHORT).show();
                    break;
                case SmsManager.RESULT_ERROR_NULL_PDU:
                    Toast.makeText(getBaseContext(), "Null PDU", 
                            Toast.LENGTH_SHORT).show();
                    break;
                case SmsManager.RESULT_ERROR_RADIO_OFF:
                    Toast.makeText(getBaseContext(), "Radio off", 
                            Toast.LENGTH_SHORT).show();
                    break;
            }
        }
    }, new IntentFilter(SENT));
 
    //---когда SMS доставлено---
    registerReceiver(new BroadcastReceiver(){
        @Override
        public void onReceive(Context arg0, Intent arg1) {
            switch (getResultCode())
            {
                case Activity.RESULT_OK:
                    Toast.makeText(getBaseContext(), "SMS delivered", 
                            Toast.LENGTH_SHORT).show();
                    break;
                case Activity.RESULT_CANCELED:
                    Toast.makeText(getBaseContext(), "SMS not delivered", 
                            Toast.LENGTH_SHORT).show();
                    break;                        
            }
        }
    }, new IntentFilter(DELIVERED));        
 
    SmsManager sms = SmsManager.getDefault();
    sms.sendTextMessage(phoneNumber, null, message, sentPI, deliveredPI);        
}
http://www.mobilab.ru/androiddev/smsandroid.html



